@page "/Locations"
@using MeetNSeat.Client.Services
@using MeetNSeat.Client.Models
@attribute [Authorize]

<main role="main" class="col-md-12 ml-sm-auto col-lg-12 px-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h2>Locations</h2>
    </div>
    <div>
        <form>
            <input class="form-control" @bind="@Name" @bind:event="oninput" placeholder="Name">
            <input class="form-control" @bind="@City" @bind:event="oninput" placeholder="City">
            <input class="form-control" @bind="@IpAddress" @bind:event="oninput" placeholder="Ip Address">
            <button @onclick="AddLocation" type="button" class="btn btn-primary">Add location</button>
        </form>
        <table class="table table-secondary">
            <thead>
                <tr>
                    <th scope="col">Location</th>
                    <th scope="col">City</th>
                    <th scope="col">IpAdress</th>
                    <th scope="col" class="update-button-col"></th>
                </tr>
            </thead>
            <tbody>
                @if (Locations.Any())
                {
                    foreach (var location in Locations)
                    {
                        <tr @onclick="() => Toggle(location)">
                            <td>@location.Name</td>
                            <td>@location.City</td>
                            <td class="ip-input"><input class="form-control" placeholder="Ip Address" value="@location.IpAddress"></td>
                            <td class="update-button"><button class="btn btn-primary">Update IpAdress</button></td> @*TODO: UPDATE IP ADDRESS*@
                        </tr>
                        @if (!location.IsCollapsed)
                        {
                            <table class="table table-light">
                                <tbody>
                                @foreach (var floor in Floors)
                                {
                                    <tr>
                                        <td style="font-style: italic">Floor : @floor.Name</td>
                                        @foreach (var room in floor.Rooms)
                                        {
                                            <td>@room.Name</td>
                                        }
                                        <td style="margin: 0"><button class="btn btn-success py-1" style="font-size: 23px" @onclick="() => AddNewRoom(floor.Id)">+</button></td>
                                    </tr>
                                }
                                <tr>
                                    <td style="margin: 0"><button class="btn btn-success py-1" style="font-size: 23px" @onclick="() => AddNewFloor(location.Id)">+</button></td>
                                </tr>

                                </tbody>
                            </table>
                            

                        }
                    }  
                }
            </tbody>
        </table>
        @if (ShowFloorPopup)
        {
            <!-- This is the popup to create or edit a forecast -->
            <div class="modal" tabindex="-1" style="display:block" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Add floor</h3>
                            <!-- Button to close the popup -->
                            <button type="button" class="close"
                                    @onclick="CloseFloorPopup">
                                <span aria-hidden="true">X</span>
                            </button>
                        </div>
                        <!-- Add form for the current room -->
                        <div class="modal-body">
                            <input class="form-control" type="text" placeholder="Floorname" @bind="FloorName" @bind:event="oninput"/>
                            <br/>
                            <!-- Button to save the room -->
                            <button class="btn btn-primary" @onclick="AddFloorAsync">
                                Add
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (ShowRoomPopup)
        {
            <!-- This is the popup to create or edit a forecast -->
            <div class="modal" tabindex="-1" style="display:block" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Add room</h3>
                            <!-- Button to close the popup -->
                            <button type="button" class="close"
                                    @onclick="CloseRoomPopup">
                                <span aria-hidden="true">X</span>
                            </button>
                        </div>
                        <!-- Add form for the current room -->
                        <div class="modal-body">
                            <input class="form-control" type="text" placeholder="Room name" @bind="RoomName" @bind:event="oninput"/>
                            <input class="form-control" type="text" placeholder="Type" @bind="Type" @bind:event="oninput"/>
                            <input class="form-control" type="text" placeholder="Spots" @bind="Spots" @bind:event="oninput"/>
                            <input class="form-control" type="text" placeholder="Facilities" @bind="Facilities" @bind:event="oninput"/>
                            <br/>
                            <!-- Button to save the room -->
                            <button class="btn btn-primary" @onclick="AddRoomAsync">
                                Add
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</main>


@code {
    //PopupProps
    private bool ShowRoomPopup { get; set; } = false;

    private bool ShowFloorPopup { get; set; } = false;

    //RoomForm
    private int FloorId { get; set; }

    private string RoomName { get; set; }

    private string Type { get; set; }

    private int Spots { get; set; }

    private string Facilities { get; set; }

    //FloorForm
    private string FloorName { get; set; }

    private int LocationId { get; set; }

    //LocationForm
    private string Name { get; set; }

    private string City { get; set; }

    private string IpAddress { get; set; }

    List<LocationModel> Locations { get; set; } = new();

    List<FloorModel> Floors { get; set; } = new();

    void AddNewRoom(int floorId)
    {
        // Open the Popup
        FloorId = floorId;
        ShowRoomPopup = true;
    }

    void AddNewFloor(int locationId)
    {
        LocationId = locationId;
        ShowFloorPopup = true;
    }

    void CloseFloorPopup()
    {
        // Close the Popup
        ShowFloorPopup = false;
    }

    void CloseRoomPopup()
    {
        // Close the Popup
        ShowRoomPopup = false;
    }

    private async Task Toggle(LocationModel location)
    {
        location.IsCollapsed = !location.IsCollapsed;
        if (!location.IsCollapsed)
            await GetFloorsByLocationId(location.Id);
    }

    protected override async Task OnInitializedAsync()
    {
        Locations = (await LocationService.GetAllLocations()).ToList();
    }

    private async Task GetFloorsByLocationId(int id)
    {
        Floors = (await FloorService.GetAllFloorsAndRoomsByLocationId(id)).ToList();
    }

    private async Task AddLocation()
    {
        await LocationService.AddLocation(new LocationModel(Name, City, IpAddress));
    }

    private async Task AddRoomAsync()
    {
        await RoomService.AddRoom(new RoomModel(FloorId, RoomName, Type, Spots, Facilities));
    }

    private async Task AddFloorAsync()
    {
        await FloorService.AddFloor(new FloorModel(LocationId, FloorName));
    }

}

<style>
  .update-button {
    max-width: 50px;
  }
  .ip-input {
      max-width: 80px;
  }
</style>